{"version":3,"sources":["plugins/Bidding/pages/Dashboard.tsx","plugins/Bidding/routes/PublicRoutes.tsx","plugins/Bidding/Main.tsx"],"names":["Dashboard","text","PublicRoutes","path","useRouteMatch","component","PrivateRoutes","React","lazy","ExpertRoutes","AuditorRoutes","Main","dispatch","useDispatch","useState","isAdmin","setIsAdmin","isExpert","setIsExpert","isAuditor","setIsAuditor","useEffect","layoutActions","setActivePluginId","plugin","id","checkAdmin","then","result","catch","checkRolePermission","adminList","adminMenuList","expertList","expertMenuList","auditorList","auditorMenuList","setMenuList","menuList"],"mappings":"mOAOe,SAASA,IACtB,OAAO,cAAC,IAAD,CAAeC,KAHP,oECIF,SAASC,IACtB,IAAQC,EAASC,cAATD,KAER,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,cAAuBE,UAAWL,MCUnD,IAAMM,EAAgBC,IAAMC,MAAK,kBAAM,kCAGjCC,EAAeF,IAAMC,MAAK,kBAAM,uDAChCE,EAAgBH,IAAMC,MAAK,kBAAM,iCAExB,SAASG,IACtB,IAAQR,EAASC,cAATD,KACFS,EAAwBC,cAE9B,EAA8BN,IAAMO,UAAS,GAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCT,IAAMO,UAAS,GAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCX,IAAMO,UAAS,GAAjD,mBAAOK,EAAP,KAAkBC,EAAlB,KA2CA,OAzCAb,IAAMc,WAAU,WACdT,EAASU,gBAAcC,kBAAkBC,IAAOC,KAChDC,cACGC,MAAK,SAACC,GACLZ,EAAWY,MAEZC,OAAM,WACLb,GAAW,MAGfc,YAAoB,eACjBH,MAAK,SAACC,GACLV,EAAYU,MAEbC,OAAM,WACLX,GAAY,MAGhBY,YAAoB,gBACjBH,MAAK,SAACC,GACLR,EAAaQ,MAEdC,OAAM,WACLT,GAAa,QAGhB,IAEHb,IAAMc,WAAU,WACd,IAAMU,EAAYhB,EAAO,YAAOiB,KAAiB,GAC3CC,EAAahB,EAAQ,YAAOiB,KAAkB,GAC9CC,EAAchB,EAAS,YAAOiB,KAAmB,GACvDxB,EAASU,gBAAce,YAAd,sBACJC,KADI,YAEJL,GAFI,YAGJE,GAHI,YAIJJ,QAGJ,CAAChB,EAASE,EAAUE,IAGrB,eAAC,IAAD,WACGF,GAAY,cAAC,IAAD,CAAOd,KAAI,UAAKA,EAAL,WAAoBE,UAAWI,IACtDU,GAAa,cAAC,IAAD,CAAOhB,KAAI,UAAKA,EAAL,YAAqBE,UAAWK,IACxDK,GAAW,cAAC,IAAD,CAAOZ,KAAI,UAAKA,EAAL,UAAmBE,UAAWC,IACrD,cAAC,IAAD,CAAOH,KAAI,UAAKA,GAAQE,UAAWH","file":"static/js/26.8ad82053.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  DashboardForm\n} from '@nvdunginest/emis-mui';\n\nconst pageText = 'HỆ THỐNG ĐẤU THẦU TRỰC TUYẾN';\n\nexport default function Dashboard(): JSX.Element {\n  return <DashboardForm text={pageText} />\n}","import React from 'react';\nimport {\n  Route,\n  Switch,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\n\nexport default function PublicRoutes(): JSX.Element {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/dashboard`} component={Dashboard} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  AppDispatch,\n  layoutActions,\n} from '../../core';\n\nimport {\n  plugin,\n  checkAdmin,\n  checkRolePermission,\n\n  menuList,\n  adminMenuList,\n  expertMenuList,\n  auditorMenuList,\n} from './configs';\n\nconst PrivateRoutes = React.lazy(() => import('./routes/PrivateRoutes'));\nimport PublicRoutes from './routes/PublicRoutes';\n\nconst ExpertRoutes = React.lazy(() => import('./routes/ExpertRoutes'));\nconst AuditorRoutes = React.lazy(() => import('./routes/AuditorRoutes'));\n\nexport default function Main(): JSX.Element {\n  const { path } = useRouteMatch();\n  const dispatch: AppDispatch = useDispatch();\n\n  const [isAdmin, setIsAdmin] = React.useState(false);\n  const [isExpert, setIsExpert] = React.useState(false);\n  const [isAuditor, setIsAuditor] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(layoutActions.setActivePluginId(plugin.id));\n    checkAdmin()\n      .then((result) => {\n        setIsAdmin(result);\n      })\n      .catch(() => {\n        setIsAdmin(false);\n      });\n\n    checkRolePermission('EXPERT_ROLE')\n      .then((result) => {\n        setIsExpert(result);\n      })\n      .catch(() => {\n        setIsExpert(false);\n      });\n\n    checkRolePermission('AUDITOR_ROLE')\n      .then((result) => {\n        setIsAuditor(result);\n      })\n      .catch(() => {\n        setIsAuditor(false);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    const adminList = isAdmin ? [...adminMenuList] : [];\n    const expertList = isExpert ? [...expertMenuList] : [];\n    const auditorList = isAuditor ? [...auditorMenuList] : [];\n    dispatch(layoutActions.setMenuList([\n      ...menuList,\n      ...expertList,\n      ...auditorList,\n      ...adminList,\n    ]));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAdmin, isExpert, isAuditor]);\n\n  return (\n    <Switch>\n      {isExpert && <Route path={`${path}/expert`} component={ExpertRoutes} />}\n      {isAuditor && <Route path={`${path}/auditor`} component={AuditorRoutes} />}\n      {isAdmin && <Route path={`${path}/admin`} component={PrivateRoutes} />}\n      <Route path={`${path}`} component={PublicRoutes} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}