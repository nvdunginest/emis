{"version":3,"sources":["plugins/Admin/services/moderator.ts","plugins/Admin/pages/Moderators.tsx","plugins/Admin/services/email.ts","plugins/Admin/pages/Email.tsx","plugins/Admin/services/resetPasswordEmailTemplate.ts","plugins/Admin/pages/RPE.tsx","plugins/Admin/services/sapConnection.ts","plugins/Admin/pages/SapConnection.tsx","plugins/Admin/services/biddingEmail.ts","plugins/Admin/pages/BiddingEmail.tsx","plugins/Admin/services/biddingResetPasswordEmailTemplate.ts","plugins/Admin/pages/BiddingRPE.tsx","plugins/Admin/routes/PublicRoutes.tsx","plugins/Admin/Main.tsx"],"names":["apiUrl","module","service","getModerators","axios","get","createModerator","userNumber","post","removeModerator","delete","columns","id","label","numeric","sortable","Moderators","data","dispatch","useDispatch","moduleName","useParams","React","useState","showForm","setShowForm","moderators","setModerators","number","setNumber","handleSubmit","a","loadingActions","show","moderatorService","alertActions","alertMessage","ACTION_SUCCESS","refresh","ACTION_FAILURE","hide","handleRemove","actionsButton","tooltip","text","icon","color","hideTitleOnMobile","onClick","filter","x","role","FETCH_FAILURE","useEffect","title","open","onClose","onSubmit","name","type","value","required","onChange","event","target","map","item","action","actions","initialOrderBy","set","model","initialState","from","password","port","portString","smtpServer","userName","Email","emailConfig","setEmailConfig","showPassword","setShowPassword","emailService","res","toFixed","handleChange","handleSave","parseInt","Grid","container","spacing","alignItems","xs","md","variant","onMouseDown","onMouseUp","subject","content","RPE","rpeConfig","setRPEConfig","rpeService","multiline","rows","dangerouslySetInnerHTML","__html","Typography","url","client","username","SapConnection","sapConnectionConfig","setSapConnectionConfig","sapConnectionService","BiddingEmail","PublicRoutes","path","useRouteMatch","component","BiddingRPE","PrivateRoutes","lazy","Main","isAdmin","setIsAdmin","layoutActions","setActivePluginId","plugin","checkAdmin","then","result","catch","adminList","adminMenuList","setMenuList","menuList"],"mappings":"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","file":"static/js/24.4237aeea.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiUrl = (module: string) => `/api/${module}/moderators`\n\nexport type ModeratorModel = {\n  userNumber: string;\n  role: string;\n}\n\nfunction getModerators(module: string): Promise<ModeratorModel[]> {\n  return axios.get(apiUrl(module));\n}\n\nfunction createModerator(module: string, userNumber: string): Promise<unknown> {\n  return axios.post(`${apiUrl(module)}/createMod/${userNumber}`);\n}\n\nfunction removeModerator(module: string, userNumber: string): Promise<unknown> {\n  return axios.delete(`${apiUrl(module)}/removeMod/${userNumber}`);\n}\n\nconst service = {\n  getModerators,\n  createModerator,\n  removeModerator,\n};\n\nexport default service;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n\tIconButton,\n\tFormDialog,\n\tTextField,\n\tDataTable,\n\tDataColumnType,\n} from '@nvdunginest/emis-mui';\n\nimport moderatorService, { ModeratorModel } from '../services/moderator';\n\nimport {\n\talertActions,\n\tloadingActions,\n\talertMessage,\n\tAppDispatch,\n} from '../../../core';\n\ntype Data = ModeratorModel & {\n\taction: JSX.Element,\n}\n\nconst columns: DataColumnType<Data>[] = [\n\t{ id: 'userNumber', label: 'Mã số', numeric: false, sortable: true },\n\t{ id: 'role', label: 'Role', numeric: false, sortable: true },\n\t{ id: 'action', label: '', numeric: false, sortable: false },\n];\n\nexport default function Moderators(): JSX.Element {\n\tconst dispatch: AppDispatch = useDispatch();\n\tconst { moduleName }: never = useParams();\n\n\tconst [showForm, setShowForm] = React.useState(false);\n\n\tconst [moderators, setModerators] = React.useState<ModeratorModel[]>([]);\n\tconst [number, setNumber] = React.useState<string>('');\n\n\tconst handleCloseForm = () => {\n\t\tsetShowForm(false);\n\t};\n\n\tconst handleOpenCreateForm = () => {\n\t\tsetNumber('');\n\t\tsetShowForm(true);\n\t};\n\n\tconst handleSubmit = async () => {\n\t\tsetShowForm(false);\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tawait moderatorService.createModerator(moduleName, number);\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n\t\t\trefresh();\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t};\n\n\tconst handleRemove = async (userNumber: string) => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tawait moderatorService.removeModerator(moduleName, userNumber);\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n\t\t\trefresh();\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tconst actionsButton = [\n\t\t<IconButton\n\t\t\tkey={1}\n\t\t\ttooltip=\"Thêm quản lý mới\"\n\t\t\ttext=\"Thêm\"\n\t\t\ticon=\"plus\"\n\t\t\tcolor=\"primary\"\n\t\t\thideTitleOnMobile\n\t\t\tonClick={handleOpenCreateForm}\n\t\t/>,\n\t];\n\n\tconst renderData = (data: ModeratorModel[]): Data[] => {\n\t\treturn data.map(item => {\n\t\t\tconst row: Data = {\n\t\t\t\t...item,\n\t\t\t\taction: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ttooltip=\"Xóa quản lý\"\n\t\t\t\t\t\t\ttext=\"Xóa\"\n\t\t\t\t\t\t\ticon=\"trash-alt\"\n\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\thideTitleOnMobile\n\t\t\t\t\t\t\tonClick={() => { handleRemove(item.userNumber); }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn row;\n\t\t});\n\t}\n\n\tconst refresh = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tsetModerators((await moderatorService.getModerators(moduleName)).filter(x=>x.role==='MOD_ROLE'));\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n\t\t}\n\t\tfinally {\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\trefresh();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [moduleName]);\n\n\treturn (\n\t\t<>\n\t\t\t<FormDialog\n\t\t\t\ttitle=\"Thêm quản lý\"\n\t\t\t\topen={showForm}\n\t\t\t\tonClose={handleCloseForm}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tname=\"number\"\n\t\t\t\t\tlabel=\"Mã số nhân viên\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={number}\n\t\t\t\t\trequired\n\t\t\t\t\tonChange={(event) => { setNumber(event.target.value); }}\n\t\t\t\t/>\n\t\t\t</FormDialog>\n\t\t\t<DataTable\n\t\t\t\ttitle={moduleName}\n\t\t\t\tcolumns={columns}\n\t\t\t\tdata={renderData(moderators)}\n\t\t\t\tactions={actionsButton}\n\t\t\t\tinitialOrderBy=\"userNumber\"\n\t\t\t/>\n\t\t</>\n\t)\n}\n","import axios from 'axios';\n\nconst apiUrl = '/api/configuration/emailConfig';\n\nexport type EmailConfigModel = {\n  from: string,\n  smtpServer: string,\n  port: number,\n  userName: string,\n  password: string\n}\n\nfunction get(): Promise<EmailConfigModel> {\n  return axios.get(apiUrl);\n}\n\nfunction set(model: EmailConfigModel): Promise<unknown> {\n  return axios.post(apiUrl, model);\n}\n\nconst service = {\n  get,\n  set,\n};\n\nexport default service;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n\tGrid,\n} from '@material-ui/core';\nimport {\n\tIconButton,\n\tTextField,\n\tFrame,\n} from '@nvdunginest/emis-mui';\n\nimport emailService, { EmailConfigModel } from '../services/email';\n\nimport {\n\talertActions,\n\tloadingActions,\n\talertMessage,\n\tAppDispatch,\n} from '../../../core';\n\ntype EmailConfigState = EmailConfigModel & {\n\tportString: string;\n}\n\nconst initialState: EmailConfigState = {\n\tfrom: '',\n\tpassword: '',\n\tport: 0,\n\tportString: '0',\n\tsmtpServer: '',\n\tuserName: '',\n}\n\nexport default function Email(): JSX.Element {\n\tconst dispatch: AppDispatch = useDispatch();\n\n\tconst [emailConfig, setEmailConfig] = React.useState<EmailConfigState>(initialState);\n\tconst [showPassword, setShowPassword] = React.useState<boolean>(false);\n\n\tconst refresh = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tconst res = await emailService.get();\n\t\t\tsetEmailConfig({ ...res, portString: res.port.toFixed(0) });\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n\t\t}\n\t\tfinally {\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tconst handleShowPassword = () => {\n\t\tsetShowPassword(true);\n\t}\n\n\tconst handleHidePassword = () => {\n\t\tsetShowPassword(false);\n\t}\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetEmailConfig({ ...emailConfig, [event.target.name]: event.target.value });\n\t}\n\n\tconst handleSave = async () => {\n\t\tconst model: EmailConfigModel = {\n\t\t\tfrom: emailConfig.from,\n\t\t\tpassword: emailConfig.password,\n\t\t\tport: parseInt(emailConfig.portString, 10),\n\t\t\tsmtpServer: emailConfig.smtpServer,\n\t\t\tuserName: emailConfig.userName,\n\t\t};\n\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tawait emailService.set(model);\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n\t\t\trefresh();\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\trefresh();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<Frame title=\"Email\">\n\t\t\t<Grid container spacing={1} alignItems=\"flex-end\">\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"smtpServer\" label=\"Smtp server\" value={emailConfig.smtpServer} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"portString\" label=\"Port\" value={emailConfig.portString} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"from\" label=\"From\" value={emailConfig.from} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"userName\" label=\"Username\" value={emailConfig.userName} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"password\" label=\"Password\" value={emailConfig.password} type={showPassword ? 'text' : 'password'} onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6} container spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<IconButton text=\"Lưu lại\" icon=\"save\" variant=\"contained\" onClick={handleSave} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ttext=\"Show password\"\n\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\ticon=\"eye\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonMouseDown={handleShowPassword}\n\t\t\t\t\t\t\tonMouseUp={handleHidePassword}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Frame>\n\t)\n}\n","import axios from 'axios';\n\nconst apiUrl = '/api/configuration/resetPasswordEmailTemplate';\n\nexport type RPEModel = {\n  subject: string;\n  content: string;\n}\n\nfunction get(): Promise<RPEModel> {\n  return axios.get(apiUrl);\n}\n\nfunction set(model: RPEModel): Promise<unknown> {\n  return axios.post(apiUrl, model);\n}\n\nconst service = {\n  get,\n  set,\n};\n\nexport default service;\n","import React from 'react';\nimport {\n\tGrid,\n\tTypography,\n} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport {\n\tIconButton,\n\tTextField,\n\tFrame,\n} from '@nvdunginest/emis-mui';\n\nimport rpeService, { RPEModel } from '../services/resetPasswordEmailTemplate';\n\nimport {\n\talertActions,\n\tloadingActions,\n\talertMessage,\n\tAppDispatch,\n} from '../../../core';\n\nconst initialState: RPEModel = {\n\tsubject: '',\n\tcontent: '',\n}\n\nexport default function RPE(): JSX.Element {\n\tconst dispatch: AppDispatch = useDispatch();\n\n\tconst [rpeConfig, setRPEConfig] = React.useState<RPEModel>(initialState);\n\n\tconst refresh = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tsetRPEConfig(await rpeService.get())\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n\t\t}\n\t\tfinally {\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetRPEConfig({ ...rpeConfig, [event.target.name]: event.target.value });\n\t}\n\n\tconst handleSave = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tawait rpeService.set(rpeConfig);\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n\t\t\trefresh();\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\trefresh();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<Frame title=\"Reset Password Email\">\n\t\t\t<Grid container spacing={1} alignItems=\"stretch\">\n\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t<TextField name=\"subject\" label=\"Smtp server\" value={rpeConfig.subject} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={16}\n\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\tvalue={rpeConfig.content}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: rpeConfig.content }}></div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<IconButton text=\"Lưu lại\" icon=\"save\" variant=\"contained\" onClick={handleSave} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t{`{FullName}: Họ tên người gửi | {Link}: Đường dẫn reset password`}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Frame>\n\t)\n}\n","import axios from 'axios';\n\nconst apiUrl = '/api/configuration/sapConnectionConfig';\n\nexport type SapConnectionConfigModel = {\n  url: string;\n  client: string;\n  username: string;\n  password: string;\n}\n\nfunction get(): Promise<SapConnectionConfigModel> {\n  return axios.get(apiUrl);\n}\n\nfunction set(model: SapConnectionConfigModel): Promise<unknown> {\n  return axios.post(apiUrl, model);\n}\n\nconst service = {\n  get,\n  set,\n};\n\nexport default service;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n\tGrid,\n} from '@material-ui/core';\nimport {\n\tIconButton,\n\tTextField,\n\tFrame,\n} from '@nvdunginest/emis-mui';\n\nimport sapConnectionService, { SapConnectionConfigModel } from '../services/sapConnection';\n\nimport {\n\talertActions,\n\tloadingActions,\n\talertMessage,\n\tAppDispatch,\n} from '../../../core';\n\nconst initialState: SapConnectionConfigModel = {\n\turl: '',\n\tclient: '',\n\tusername: '',\n\tpassword: '',\n}\n\nexport default function SapConnection(): JSX.Element {\n\tconst dispatch: AppDispatch = useDispatch();\n\n\tconst [sapConnectionConfig, setSapConnectionConfig] = React.useState<SapConnectionConfigModel>(initialState);\n\tconst [showPassword, setShowPassword] = React.useState<boolean>(false);\n\n\tconst refresh = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tsetSapConnectionConfig(await sapConnectionService.get());\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n\t\t}\n\t\tfinally {\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tconst handleShowPassword = () => {\n\t\tsetShowPassword(true);\n\t}\n\n\tconst handleHidePassword = () => {\n\t\tsetShowPassword(false);\n\t}\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetSapConnectionConfig({ ...sapConnectionConfig, [event.target.name]: event.target.value });\n\t}\n\n\tconst handleSave = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tawait sapConnectionService.set(sapConnectionConfig);\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n\t\t\trefresh();\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\trefresh();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<Frame title=\"Sap Connection\">\n\t\t\t<Grid container spacing={1} alignItems=\"flex-end\">\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"url\" label=\"Url\" value={sapConnectionConfig.url} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"client\" label=\"Client\" value={sapConnectionConfig.client} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"username\" label=\"Username\" value={sapConnectionConfig.username} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"password\" label=\"Password\" value={sapConnectionConfig.password} type={showPassword ? 'text' : 'password'} onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6} container spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<IconButton text=\"Lưu lại\" icon=\"save\" variant=\"contained\" onClick={handleSave} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ttext=\"Show password\"\n\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\ticon=\"eye\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonMouseDown={handleShowPassword}\n\t\t\t\t\t\t\tonMouseUp={handleHidePassword}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Frame>\n\t)\n}\n","import axios from 'axios';\n\nconst apiUrl = '/api/configuration/biddingEmailConfig';\n\nexport type BiddingEmailConfigModel = {\n  from: string,\n  smtpServer: string,\n  port: number,\n  userName: string,\n  password: string\n}\n\nfunction get(): Promise<BiddingEmailConfigModel> {\n  return axios.get(apiUrl);\n}\n\nfunction set(model: BiddingEmailConfigModel): Promise<unknown> {\n  return axios.post(apiUrl, model);\n}\n\nconst service = {\n  get,\n  set,\n};\n\nexport default service;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n\tGrid,\n} from '@material-ui/core';\n\nimport emailService, { BiddingEmailConfigModel } from '../services/biddingEmail';\nimport {\n\tIconButton,\n\tTextField,\n\tFrame,\n} from '@nvdunginest/emis-mui';\n\nimport {\n\tAppDispatch,\n\talertActions,\n\talertMessage,\n\tloadingActions,\n} from '../../../core';\n\ntype EmailConfigState = BiddingEmailConfigModel & {\n\tportString: string;\n}\n\nconst initialState: EmailConfigState = {\n\tfrom: '',\n\tpassword: '',\n\tport: 0,\n\tportString: '0',\n\tsmtpServer: '',\n\tuserName: '',\n}\n\nexport default function BiddingEmail(): JSX.Element {\n\tconst dispatch: AppDispatch = useDispatch();\n\n\tconst [emailConfig, setEmailConfig] = React.useState<EmailConfigState>(initialState);\n\tconst [showPassword, setShowPassword] = React.useState<boolean>(false);\n\n\tconst refresh = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tconst res = await emailService.get();\n\t\t\tsetEmailConfig({ ...res, portString: res.port.toFixed(0) });\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n\t\t}\n\t\tfinally {\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tconst handleShowPassword = () => {\n\t\tsetShowPassword(true);\n\t}\n\n\tconst handleHidePassword = () => {\n\t\tsetShowPassword(false);\n\t}\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetEmailConfig({ ...emailConfig, [event.target.name]: event.target.value });\n\t}\n\n\tconst handleSave = async () => {\n\t\tconst model: BiddingEmailConfigModel = {\n\t\t\tfrom: emailConfig.from,\n\t\t\tpassword: emailConfig.password,\n\t\t\tport: parseInt(emailConfig.portString, 10),\n\t\t\tsmtpServer: emailConfig.smtpServer,\n\t\t\tuserName: emailConfig.userName,\n\t\t};\n\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tawait emailService.set(model);\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n\t\t\trefresh();\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\trefresh();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<Frame title=\"Bidding Email\">\n\t\t\t<Grid container spacing={1} alignItems=\"flex-end\">\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"smtpServer\" label=\"Smtp server\" value={emailConfig.smtpServer} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"portString\" label=\"Port\" value={emailConfig.portString} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"from\" label=\"From\" value={emailConfig.from} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"userName\" label=\"Username\" value={emailConfig.userName} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField name=\"password\" label=\"Password\" value={emailConfig.password} type={showPassword ? 'text' : 'password'} onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6} container spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<IconButton text=\"Lưu lại\" icon=\"save\" variant=\"contained\" onClick={handleSave} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ttext=\"Show password\"\n\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\ticon=\"eye\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tonMouseDown={handleShowPassword}\n\t\t\t\t\t\t\tonMouseUp={handleHidePassword}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Frame>\n\t)\n}\n","import axios from 'axios';\n\nconst apiUrl = '/api/configuration/biddingResetPasswordEmailTemplate';\n\nexport type RPEModel = {\n  subject: string;\n  content: string;\n}\n\nfunction get(): Promise<RPEModel> {\n  return axios.get(apiUrl);\n}\n\nfunction set(model: RPEModel): Promise<unknown> {\n  return axios.post(apiUrl, model);\n}\n\nconst service = {\n  get,\n  set,\n};\n\nexport default service;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n\tGrid,\n\tTypography,\n} from '@material-ui/core';\nimport {\n\tIconButton,\n\tTextField,\n\tFrame,\n} from '@nvdunginest/emis-mui';\n\nimport rpeService, { RPEModel } from '../services/biddingResetPasswordEmailTemplate';\n\nimport {\n\talertActions,\n\tloadingActions,\n\talertMessage,\n\tAppDispatch,\n} from '../../../core';\n\nconst initialState: RPEModel = {\n\tsubject: '',\n\tcontent: '',\n}\n\nexport default function RPE(): JSX.Element {\n\tconst dispatch: AppDispatch = useDispatch();\n\n\tconst [rpeConfig, setRPEConfig] = React.useState<RPEModel>(initialState);\n\n\tconst refresh = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tsetRPEConfig(await rpeService.get())\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n\t\t}\n\t\tfinally {\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetRPEConfig({ ...rpeConfig, [event.target.name]: event.target.value });\n\t}\n\n\tconst handleSave = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tawait rpeService.set(rpeConfig);\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n\t\t\trefresh();\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\trefresh();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<Frame title=\"Bidding Reset Password Email\">\n\t\t\t<Grid container spacing={1} alignItems=\"stretch\">\n\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t<TextField name=\"subject\" label=\"Smtp server\" value={rpeConfig.subject} type=\"text\" onChange={handleChange} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={16}\n\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\tvalue={rpeConfig.content}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: rpeConfig.content }}></div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<IconButton text=\"Lưu lại\" icon=\"save\" variant=\"contained\" onClick={handleSave} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t{`{FullName}: Họ tên người gửi | {Link}: Đường dẫn reset password`}\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Frame>\n\t)\n}\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport Moderators from '../pages/Moderators';\nimport Email from '../pages/Email';\nimport RPE from '../pages/RPE';\nimport SapConnection from '../pages/SapConnection';\n\nimport BiddingEmail from '../pages/BiddingEmail';\nimport BiddingRPE from '../pages/BiddingRPE';\n\nexport default function PublicRoutes(): JSX.Element {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/moderators/:moduleName`} component={Moderators} />\n\n      <Route path={`${path}/email`} component={Email} />\n      <Route path={`${path}/reset-password-email`} component={RPE} />\n      <Route path={`${path}/sap-connection`} component={SapConnection} />\n\n      <Route path={`${path}/bidding-email`} component={BiddingEmail} />\n      <Route path={`${path}/bidding-reset-password-email`} component={BiddingRPE} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  AppDispatch,\n  layoutActions,\n} from '../../core';\n\nimport {\n  plugin,\n  checkAdmin,\n\n  menuList,\n  adminMenuList,\n} from './configs';\n\nconst PrivateRoutes = React.lazy(() => import('./routes/PrivateRoutes'));\nimport PublicRoutes from './routes/PublicRoutes';\n\nexport default function Main(): JSX.Element {\n  const { path } = useRouteMatch();\n  const dispatch: AppDispatch = useDispatch();\n\n  const [isAdmin, setIsAdmin] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(layoutActions.setActivePluginId(plugin.id));\n    checkAdmin()\n      .then((result) => {\n        setIsAdmin(result);\n      })\n      .catch(() => {\n        setIsAdmin(false);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    const adminList = isAdmin ? [...adminMenuList] : [];\n    dispatch(layoutActions.setMenuList([\n      ...menuList,\n      ...adminList,\n    ]));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAdmin]);\n\n  return (\n    <Switch>\n      {isAdmin && <Route path={`${path}/admin`} component={PrivateRoutes} />}\n      <Route path={`${path}`} component={PublicRoutes} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}