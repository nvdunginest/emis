{"version":3,"sources":["configs/format.ts","plugins/Timekeeper/services/timeLog.ts","plugins/Timekeeper/pages/Dashboard.tsx","plugins/Timekeeper/routes/PublicRoutes.tsx","plugins/Timekeeper/Main.tsx"],"names":["format","formatDate","date","formatString","result","symbol","value","getDate","getMonth","getFullYear","getHours","getMinutes","map","f","replace","formatMoney","frac","numberFormat","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","service","get","month","year","axios","useStyles","makeStyles","theme","cell","padding","spacing","height","width","breakpoints","down","head","textAlign","fontWeight","cellContent","display","flexDirection","Dashboard","classes","React","useState","timeLogs","setTimeLogs","dispatch","useDispatch","Date","setMonth","setYear","refresh","a","loadingActions","show","timeLogService","alertActions","alertMessage","FETCH_FAILURE","hide","addDate","days","setDate","validateDate","b","getInText","data","find","x","undefined","hasTimeIn","timeIn","getOutText","hasTimeOut","timeOut","useEffect","title","noPadding","Grid","style","container","item","xs","alignItems","icon","onClick","Typography","variant","className","start","current","day","getDay","getStartDate","end","getEndDate","row","push","getDateArray","rowIndex","cellIndex","backgroundColor","grey","align","fontSize","color","blue","amber","PublicRoutes","path","useRouteMatch","component","PrivateRoutes","lazy","Main","isAdmin","setIsAdmin","layoutActions","setActivePluginId","plugin","id","checkAdmin","then","catch","adminList","adminMenuList","setMenuList","menuList"],"mappings":"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","file":"static/js/17.b4a9dbe1.chunk.js","sourcesContent":["function formatDate(date: Date, formatString = 'dd/MM/yyyy'): string {\n  let result = formatString;\n\n  const format = [\n    {\n      symbol: 'dd',\n      value: date.getDate() < 10 ? `0${date.getDate()}` : date.getDate(),\n    },\n    {\n      symbol: 'MM',\n      value: date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`,\n    },\n    {\n      symbol: 'yyyy',\n      value: date.getFullYear(),\n    },\n    {\n      symbol: 'hh',\n      value: date.getHours() < 10 ? `0${date.getHours()}` : date.getHours(),\n    },\n    {\n      symbol: 'mm',\n      value: date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes(),\n    },\n  ];\n\n  format.map((f) => {\n    result = result.replace(f.symbol, f.value as string);\n    return f.symbol;\n  });\n\n  return result;\n}\n\nfunction formatMoney(value: number, frac = 0): string {\n  const numberFormat = new Intl.NumberFormat('vi-VN', { maximumFractionDigits: frac, minimumFractionDigits: frac });\n  return numberFormat.format(value);\n}\n\nconst format = {\n  formatDate,\n  formatMoney,\n};\n\nexport default format;\n","import axios from 'axios';\n\nconst apiUrl = '/api/timekeeper/timeLogs';\n\nexport type TimeLogModel = {\n  date: Date;\n  hasTimeIn: boolean;\n  timeIn: Date;\n  hasTimeOut: boolean;\n  timeOut: Date;\n}\n\nfunction get(month: number, year: number): Promise<TimeLogModel[]> {\n  return axios.get(`${apiUrl}/${month}/${year}`);\n}\n\nconst service = {\n  get,\n};\n\nexport default service;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue, grey, amber } from '@material-ui/core/colors';\nimport {\n  Typography,\n  Grid,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Frame,\n  IconButton,\n} from '@nvdunginest/emis-mui';\n\nimport {\n  alertActions,\n  loadingActions,\n  alertMessage,\n  AppDispatch,\n} from '../../../core';\n\nimport format from '../../../configs/format';\nimport timeLogService, { TimeLogModel } from '../services/timeLog';\n\nconst useStyles = makeStyles((theme) => ({\n  cell: {\n    padding: theme.spacing(1),\n    height: theme.spacing(8),\n    width: 'calc(100%/7)',\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(0.5),\n    },\n  },\n  head: {\n    padding: theme.spacing(1),\n    width: 'calc(100%/7)',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  cellContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n}));\n\nexport default function Dashboard(): JSX.Element {\n  const classes = useStyles();\n  const [timeLogs, setTimeLogs] = React.useState<TimeLogModel[]>([]);\n  const dispatch: AppDispatch = useDispatch();\n\n  const [month, setMonth] = React.useState<number>((new Date()).getMonth() + 1);\n  const [year, setYear] = React.useState<number>((new Date()).getFullYear());\n\n  const refresh = async () => {\n    dispatch(loadingActions.show());\n    try {\n      setTimeLogs(await timeLogService.get(month, year));\n    }\n    catch {\n      dispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n    }\n    finally {\n      dispatch(loadingActions.hide());\n    }\n  }\n\n  const handlePlus = () => {\n    if (month === 12) {\n      setMonth(1);\n      setYear(year + 1);\n    }\n    else {\n      setMonth(month + 1);\n    }\n  }\n\n  const handleMinus = () => {\n    if (month === 1) {\n      setMonth(12);\n      setYear(year - 1);\n    }\n    else {\n      setMonth(month - 1);\n    }\n  }\n\n  const getStartDate = (): Date => {\n    const current = new Date(year, month - 1, 1);\n    const day = current.getDay();\n    current.setDate(current.getDate() - day);\n\n    return current;\n  }\n\n  const getEndDate = (): Date => {\n    const current = new Date(year, month, 0);\n    const day = current.getDay();\n    current.setDate(current.getDate() - day + 6);\n\n    return current;\n  }\n\n  const addDate = (date: Date, days: number): Date => {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n\n    return result;\n  }\n\n  const getDateArray = (): Date[][] => {\n    const result: Date[][] = [];\n    const start = getStartDate();\n    const end = getEndDate();\n\n    let row: Date[] = [];\n    for (let date = start; date <= end; date = addDate(date, 1)) {\n      if (date.getDay() === 0) {\n        row = [];\n        row.push(date);\n      }\n      else {\n        if (date.getDay() === 6) {\n          row.push(date);\n          result.push(row);\n        }\n        else {\n          row.push(date);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  const validateDate = (a: Date, b: Date): boolean => {\n    if (a.getFullYear() !== b.getFullYear()) return false;\n    if (a.getMonth() !== b.getMonth()) return false;\n    if (a.getDate() !== b.getDate()) return false;\n\n    return true;\n  }\n\n  const getInText = (date: Date): string => {\n    const data = timeLogs.find(x => validateDate(new Date(x.date), date));\n    if (data === undefined) {\n      return '';\n    }\n\n    if (data.hasTimeIn) {\n      return format.formatDate(new Date(data.timeIn), 'hh:mm');\n    }\n\n    return '';\n  }\n\n  const getOutText = (date: Date): string => {\n    const data = timeLogs.find(x => validateDate(new Date(x.date), date));\n    if (data === undefined) {\n      return '';\n    }\n\n    if (data.hasTimeOut) {\n      return format.formatDate(new Date(data.timeOut), 'hh:mm');\n    }\n\n    return '';\n  }\n\n  React.useEffect(() => {\n    refresh();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [month, year]);\n\n  return (\n    <Frame title=\"Time Event\" noPadding>\n      <Grid style={{ width: '100%' }} container>\n        <Grid\n          item xs={12}\n          style={{ padding: '16px', display: 'flex', flexDirection: 'row', alignItems: 'center' }}\n        >\n          <IconButton\n            icon=\"chevron-left\"\n            onClick={handleMinus}\n          />\n          <Typography variant=\"subtitle2\">\n            {`${month}/${year}`}\n          </Typography>\n          <IconButton\n            icon=\"chevron-right\"\n            onClick={handlePlus}\n          />\n        </Grid>\n        <Grid item xs={12} style={{ display: 'flex', flexDirection: 'row' }}>\n          <div className={classes.head}>CN</div>\n          <div className={classes.head}>T2</div>\n          <div className={classes.head}>T3</div>\n          <div className={classes.head}>T4</div>\n          <div className={classes.head}>T5</div>\n          <div className={classes.head}>T6</div>\n          <div className={classes.head}>T7</div>\n        </Grid>\n        {getDateArray().map((row, rowIndex) => (\n          <Grid item xs={12} key={rowIndex} style={{ display: 'flex', flexDirection: 'row' }}>\n            {row.map((cell, cellIndex) => (\n              <div\n                style={{\n                  backgroundColor: cell.getMonth() === month - 1 ? 'inherit' : grey[100]\n                }}\n                className={classes.cell}\n                key={cellIndex}\n              >\n                {cell.getMonth() === (month - 1) && (\n                  <div className={classes.cellContent}>\n                    <Typography style={{ width: '100%' }} variant=\"subtitle2\" align=\"center\">\n                      {format.formatDate(cell, 'dd')}\n                    </Typography>\n                    <Typography style={{ fontSize: '0.65rem', color: blue[800], fontWeight: 'bold' }} variant=\"caption\" align=\"left\">\n                      <FontAwesomeIcon style={{ fontSize: '0.5rem' }} icon=\"chevron-right\" />\n                      {` ${getInText(cell)}`}\n                    </Typography>\n                    <Typography style={{ fontSize: '0.65rem', color: amber[800], fontWeight: 'bold' }} variant=\"caption\" align=\"left\">\n                      <FontAwesomeIcon style={{ fontSize: '0.5rem' }} icon=\"chevron-left\" />\n                      {` ${getOutText(cell)}`}\n                    </Typography>\n                  </div>\n                )}\n              </div>\n            ))}\n          </Grid>\n        ))}\n      </Grid>\n    </Frame>\n  )\n}","import React from 'react';\nimport {\n  Route,\n  Switch,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\n\nexport default function PublicRoutes(): JSX.Element {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/dashboard`} component={Dashboard} />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  AppDispatch,\n  layoutActions,\n} from '../../core';\n\nimport {\n  plugin,\n  checkAdmin,\n\n  menuList,\n  adminMenuList,\n} from './configs';\n\nconst PrivateRoutes = React.lazy(() => import('./routes/PrivateRoutes'));\nimport PublicRoutes from './routes/PublicRoutes';\n\nexport default function Main(): JSX.Element {\n  const { path } = useRouteMatch();\n  const dispatch: AppDispatch = useDispatch();\n\n  const [isAdmin, setIsAdmin] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(layoutActions.setActivePluginId(plugin.id));\n    checkAdmin()\n      .then((result) => {\n        setIsAdmin(result);\n      })\n      .catch(() => {\n        setIsAdmin(false);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    const adminList = isAdmin ? [...adminMenuList] : [];\n    dispatch(layoutActions.setMenuList([\n      ...menuList,\n      ...adminList,\n    ]));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAdmin]);\n\n  return (\n    <Switch>\n      {isAdmin && <Route path={`${path}/admin`} component={PrivateRoutes} />}\n      <Route path={`${path}`} component={PublicRoutes} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}