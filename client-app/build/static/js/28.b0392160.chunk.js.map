{"version":3,"sources":["plugins/Contract/pages/MyContracts.tsx","plugins/Contract/routes/CreatorRoutes.tsx"],"names":["columns","id","label","numeric","sortable","getTableTitle","status","MyContracts","data","dispatch","useDispatch","useParams","React","useState","contracts","setContracts","actionsButton","tooltip","text","icon","color","onClick","refresh","a","loadingActions","show","contractService","getMyContractList","alertActions","alertMessage","FETCH_FAILURE","hide","useEffect","title","map","item","dateString","format","formatDate","Date","createdDate","action","to","contractNumber","target","style","textDecoration","actions","initialOrderBy","CreatorRoutes","path","useRouteMatch","component"],"mappings":"4QAyBMA,EAAkC,CACvC,CAAEC,GAAI,iBAAkBC,MAAO,kCAAeC,SAAS,EAAOC,UAAU,GACxE,CAAEH,GAAI,cAAeC,MAAO,gBAASC,SAAS,EAAOC,UAAU,GAC/D,CAAEH,GAAI,aAAcC,MAAO,uBAAgBC,SAAS,EAAOC,UAAU,GACrE,CAAEH,GAAI,aAAcC,MAAO,mBAAYC,SAAS,EAAOC,UAAU,GACjE,CAAEH,GAAI,SAAUC,MAAO,GAAIC,SAAS,EAAOC,UAAU,IAGtD,SAASC,EAAcC,GACtB,OAAQA,GACP,IAAK,aACJ,MAAO,kDACR,IAAK,YACJ,MAAO,qDACR,IAAK,UACJ,MAAO,oDACR,QACC,MAAO,wDAIK,SAASC,IACvB,IAgBoBC,EAhBdC,EAAwBC,cACtBJ,EAAkBK,cAAlBL,OAER,EAAkCM,IAAMC,SAA0B,IAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAgB,CACrB,cAAC,IAAD,CAECC,QAAQ,uDACRC,KAAK,kBACLC,KAAK,WACLC,MAAM,UACNC,QAAS,WAAQC,MALZ,IAiCDA,EAAO,uCAAG,sBAAAC,EAAA,6DACfd,EAASe,iBAAeC,QADT,cAGdV,EAHc,SAGKW,IAAgBC,kBAAkBrB,GAHvC,kFAMdG,EAASmB,eAAaH,KAAKI,eAAaC,cAAe,UANzC,yBASdrB,EAASe,iBAAeO,QATV,4EAAH,qDAkBb,OALAnB,IAAMoB,WAAU,WACfV,MAEE,CAAChB,IAGH,cAAC,IAAD,CACC2B,MAAO5B,EAAcC,GACrBN,QAASA,EACTQ,MA9CkBA,EA8CDM,EA7CXN,EAAK0B,KAAI,SAAAC,GAmBf,OAlBe,2BACXA,GADW,IAEdC,WAAYC,IAAOC,WAAW,IAAIC,KAAKJ,EAAKK,aAAc,cAC1DC,OACC,cAAC,IAAD,CACCC,GAAE,gCAA2BP,EAAKQ,gBAClCC,OAAO,SACPC,MAAO,CAAEC,eAAgB,QAH1B,SAKC,cAAC,IAAD,CACC7B,QAAQ,4CACRC,KAAK,MACLC,KAAK,cACLC,MAAM,oBAgCV2B,QAAS/B,EACTgC,eAAe,mBCtGH,SAASC,IACtB,IAAQC,EAASC,cAATD,KAER,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,iBAA0BE,UAAW7C","file":"static/js/28.b0392160.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport {\n\tIconButton,\n\tDataTable,\n\tDataColumnType,\n} from '@nvdunginest/emis-mui';\n\nimport {\n\talertActions,\n\tloadingActions,\n\talertMessage,\n\tAppDispatch,\n} from '../../../core';\n\nimport format from '../../../configs/format';\n\nimport contractService, { ContractModel } from '../services/contract';\n\ntype Data = ContractModel & {\n\tdateString: string;\n\taction: JSX.Element;\n}\n\nconst columns: DataColumnType<Data>[] = [\n\t{ id: 'contractNumber', label: 'Số hợp đồng', numeric: false, sortable: true },\n\t{ id: 'projectName', label: 'Dự án', numeric: false, sortable: true },\n\t{ id: 'vendorName', label: 'Nhà cung cấp', numeric: false, sortable: true },\n\t{ id: 'dateString', label: 'Ngày tạo', numeric: false, sortable: true },\n\t{ id: 'action', label: '', numeric: false, sortable: false },\n];\n\nfunction getTableTitle(status: string): string {\n\tswitch (status) {\n\t\tcase \"processing\":\n\t\t\treturn \"Hợp đồng đang xử lý\";\n\t\tcase \"submitted\":\n\t\t\treturn \"Hợp đồng chờ phê duyệt\";\n\t\tcase \"waiting\":\n\t\t\treturn \"Hợp đồng chờ mở lại\";\n\t\tdefault:\n\t\t\treturn \"Hợp đồng đã phê duyệt\";\n\t}\n}\n\nexport default function MyContracts(): JSX.Element {\n\tconst dispatch: AppDispatch = useDispatch();\n\tconst { status }: never = useParams();\n\n\tconst [contracts, setContracts] = React.useState<ContractModel[]>([]);\n\n\tconst actionsButton = [\n\t\t<IconButton\n\t\t\tkey={1}\n\t\t\ttooltip=\"Làm mới danh sách hợp đồng\"\n\t\t\ttext=\"Làm mới\"\n\t\t\ticon=\"sync-alt\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => { refresh(); }}\n\t\t/>,\n\t];\n\n\tconst renderData = (data: ContractModel[]): Data[] => {\n\t\treturn data.map(item => {\n\t\t\tconst row: Data = {\n\t\t\t\t...item,\n\t\t\t\tdateString: format.formatDate(new Date(item.createdDate), 'dd/MM/yyyy'),\n\t\t\t\taction:\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/b-contract/contracts/${item.contractNumber}`}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tstyle={{ textDecoration: 'none' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\ttooltip=\"Xem chi tiết hợp đồng\"\n\t\t\t\t\t\t\ttext=\"Xem\"\n\t\t\t\t\t\t\ticon=\"info-circle\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>,\n\t\t\t}\n\n\t\t\treturn row;\n\t\t});\n\t}\n\n\tconst refresh = async () => {\n\t\tdispatch(loadingActions.show());\n\t\ttry {\n\t\t\tsetContracts(await contractService.getMyContractList(status));\n\t\t}\n\t\tcatch {\n\t\t\tdispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n\t\t}\n\t\tfinally {\n\t\t\tdispatch(loadingActions.hide());\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\trefresh();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [status]);\n\n\treturn (\n\t\t<DataTable\n\t\t\ttitle={getTableTitle(status)}\n\t\t\tcolumns={columns}\n\t\t\tdata={renderData(contracts)}\n\t\t\tactions={actionsButton}\n\t\t\tinitialOrderBy=\"contractNumber\"\n\t\t/>\n\t)\n}\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport MyContracts from '../pages/MyContracts';\n\nexport default function CreatorRoutes(): JSX.Element {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/list/:status`} component={MyContracts} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}