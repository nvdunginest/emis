{"version":3,"sources":["plugins/Library/pages/CreatePost.tsx","plugins/Library/routes/CreatorRoutes.tsx"],"names":["useStyles","makeStyles","theme","formControl","margin","marginBottom","spacing","CreatePost","classes","history","useHistory","dispatch","useDispatch","React","useState","posts","setPosts","title","setTitle","content","setContent","parentId","setParentId","refresh","a","loadingActions","show","postService","getAll","alertActions","alertMessage","FETCH_FAILURE","hide","handleSubmit","model","create","postId","ACTION_SUCCESS","push","ACTION_FAILURE","useEffect","Grid","container","item","xs","label","required","value","onChange","event","target","options","optionLabel","getOptionSelected","o","v","id","find","x","Typography","variant","FormControl","fullWidth","className","text","color","icon","onClick","CreatorRoutes","path","useRouteMatch","component"],"mappings":"sRAyBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQ,EACRC,aAAcH,EAAMI,QAAQ,UAIjB,SAASC,IACtB,IAAMC,EAAUR,IACVS,EAAUC,cACVC,EAAwBC,cAE9B,EAA0BC,IAAMC,SAAsB,IAAtD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,IAAMC,SAAiB,IAAjD,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BL,IAAMC,SAAiB,IAArD,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCP,IAAMC,SAAiB,GAAvD,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAO,uCAAG,sBAAAC,EAAA,6DACdb,EAASc,iBAAeC,QADV,cAGZV,EAHY,SAGGW,IAAYC,SAHf,kFAMZjB,EAASkB,eAAaH,KAAKI,eAAaC,cAAe,UAN3C,yBASZpB,EAASc,iBAAeO,QATZ,4EAAH,qDAuBPC,EAAY,uCAAG,8BAAAT,EAAA,6DACbU,EAAsB,CAC1Bf,QAASA,EACTF,MAAOA,EACPI,SAAUA,GAGZV,EAASc,iBAAeC,QAPL,kBASIC,IAAYQ,OAAOD,GATvB,OASXE,EATW,OAUjBzB,EAASkB,eAAaH,KAAKI,eAAaO,eAAgB,YACxD5B,EAAQ6B,KAAR,yBAA+BF,IAXd,kDAcjBzB,EAASkB,eAAaH,KAAKI,eAAaS,eAAgB,UAdvC,yBAiBjB5B,EAASc,iBAAeO,QAjBP,6EAAH,qDA0BlB,OALAnB,IAAM2B,WAAU,WACdjB,MAEC,IAGD,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACpC,QAAS,EAAzB,UACE,cAACmC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEC,MAAM,uBACNC,UAAQ,EACRC,MAAO9B,EACP+B,SA3CkB,SAACC,GACzB/B,EAAS+B,EAAMC,OAAOH,YA6CpB,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEO,QAASpC,EACTqC,YAAY,QACZP,MAAM,qBACNC,UAAQ,EACRO,kBAAmB,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,IACxCT,MAAOhC,EAAM0C,MAAK,SAAAC,GAAC,OAAIA,EAAEF,KAAOnC,KAChC2B,SAlDqB,SAACD,GACd,OAAVA,GACFzB,EAAYyB,EAAMS,SAmDlB,eAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,cAACe,EAAA,EAAD,CAAYC,QAAQ,YAApB,2BACA,cAACC,EAAA,EAAD,CAAaC,WAAS,EAACF,QAAQ,WAAWG,UAAWvD,EAAQL,YAA7D,SACE,cAAC,IAAD,CACE4C,MAAO5B,EACP6B,SAAU,SAAC7B,GAAcC,EAAWD,WAI1C,cAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEgB,QAAQ,YACRI,KAAK,oBACLC,MAAM,UACNC,KAAK,OACLC,QAASlC,SCtHJ,SAASmC,IACtB,IAAQC,EAASC,cAATD,KAER,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,gBAAyBE,UAAWhE","file":"static/js/34.12028613.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Typography,\n  FormControl,\n} from '@material-ui/core';\nimport {\n  TextField,\n  IconButton,\n  ComboBox,\n  Editor,\n} from '@nvdunginest/emis-mui';\n\nimport {\n  alertActions,\n  loadingActions,\n  alertMessage,\n  AppDispatch,\n} from '../../../core';\n\nimport postService, { AddPostModel, PostModel } from '../services/post';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 0,\n    marginBottom: theme.spacing(1.5),\n  },\n}));\n\nexport default function CreatePost(): JSX.Element {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch: AppDispatch = useDispatch();\n\n  const [posts, setPosts] = React.useState<PostModel[]>([]);\n  const [title, setTitle] = React.useState<string>('');\n  const [content, setContent] = React.useState<string>('');\n  const [parentId, setParentId] = React.useState<number>(0);\n\n  const refresh = async () => {\n    dispatch(loadingActions.show());\n    try {\n      setPosts(await postService.getAll());\n    }\n    catch {\n      dispatch(alertActions.show(alertMessage.FETCH_FAILURE, 'error'));\n    }\n    finally {\n      dispatch(loadingActions.hide());\n    }\n  }\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  }\n\n  const handleChangeParentId = (value: PostModel | null) => {\n    if (value !== null) {\n      setParentId(value.id);\n    }\n  }\n\n  const handleSubmit = async () => {\n    const model: AddPostModel = {\n      content: content,\n      title: title,\n      parentId: parentId,\n    };\n\n    dispatch(loadingActions.show());\n    try {\n      const postId = await postService.create(model);\n      dispatch(alertActions.show(alertMessage.ACTION_SUCCESS, 'success'));\n      history.push(`/library/posts/${postId}`);\n    }\n    catch {\n      dispatch(alertActions.show(alertMessage.ACTION_FAILURE, 'error'));\n    }\n    finally {\n      dispatch(loadingActions.hide());\n    }\n  }\n\n  React.useEffect(() => {\n    refresh();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <TextField\n          label=\"Tiêu đề\"\n          required\n          value={title}\n          onChange={handleChangeTitle}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <ComboBox\n          options={posts}\n          optionLabel=\"title\"\n          label=\"Thuộc về\"\n          required\n          getOptionSelected={(o, v) => o.id === v.id}\n          value={posts.find(x => x.id === parentId)}\n          onChange={handleChangeParentId}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Typography variant=\"subtitle1\">Nội dung</Typography>\n        <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n          <Editor\n            value={content}\n            onChange={(content) => { setContent(content); }}\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <IconButton\n          variant=\"contained\"\n          text=\"Lưu lại\"\n          color=\"success\"\n          icon=\"plus\"\n          onClick={handleSubmit}\n        />\n      </Grid>\n    </Grid>\n  )\n}","import React from 'react';\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport CreatePost from '../pages/CreatePost';\n\nexport default function CreatorRoutes(): JSX.Element {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/create-post`} component={CreatePost} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}